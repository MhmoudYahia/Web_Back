generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    ADMIN
    EFA_MANAGER
    FAN
    GUEST
}

enum Gender {
    MALE
    FEMALE
}

model User {
    id        Int      @id @default(autoincrement())
    username  String   @unique
    password  String
    firstName String
    lastName  String
    birthDate DateTime
    approved  Boolean  @default(false)
    gender    Gender
    city      String
    address   String?
    email     String   @unique
    role      Role     @default(FAN)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    tickets   Ticket[]
}

model Team {
    id          Int     @id @default(autoincrement())
    name        String  @unique
    homeMatches Match[] @relation("HomeTeam")
    awayMatches Match[] @relation("AwayTeam")
}

model Stadium {
    id       Int     @id @default(autoincrement())
    name     String  @unique
    capacity Int
    location String
    matches  Match[]
}

model Official {
    id          Int     @id @default(autoincrement())
    name        String
    type        String // MAIN_REFEREE or LINESMAN
    mainReferee Match[] @relation("MainReferee")
    linesmen    Match[] @relation("Linesmen")
}

model Match {
    id            Int        @id @default(autoincrement())
    homeTeam      Team       @relation("HomeTeam", fields: [homeTeamId], references: [id])
    homeTeamId    Int
    awayTeam      Team       @relation("AwayTeam", fields: [awayTeamId], references: [id])
    awayTeamId    Int
    stadium       Stadium    @relation(fields: [stadiumId], references: [id])
    stadiumId     Int
    dateTime      DateTime
    mainReferee   Official   @relation("MainReferee", fields: [mainRefereeId], references: [id])
    mainRefereeId Int
    linesmen      Official[] @relation("Linesmen")
    tickets       Ticket[]
    createdAt     DateTime   @default(now())
    updatedAt     DateTime   @updatedAt

    @@unique([homeTeamId, awayTeamId, dateTime])
}

model Ticket {
    id        Int      @id @default(autoincrement())
    match     Match    @relation(fields: [matchId], references: [id])
    matchId   Int
    user      User     @relation(fields: [userId], references: [id])
    userId    Int
    seatNo    String
    createdAt DateTime @default(now())
    status    String // RESERVED, CANCELLED, USED

    @@unique([matchId, seatNo])
}
